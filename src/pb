#!/bin/bash

set -u

if [[ -f pb.conf ]]; then
    echo "Found config file: pb.conf"
else
    echo "Config file not foud: pb.conf"
    echo "run pb-create first"
    exit 0
fi

source pb.conf

pb_ver="0.1"
pb_bindir="$HOME/.local/bin/"
pb_sharedir="$HOME/.local/share/panblog/"

pb_tmpl_entry="style/template_entry.md"
pb_tmpl_entry_html="style/template_entry.html"
pb_tmpl_index="style/template_index.md"
pb_tmpl_index_html="style/template_index.html"
pb_temp_index="/tmp/index.md"

pandoc_args="--standalone --css=style.css --listings --mathjax"


pb_mdfiles=()
pb_index_filelist=()
pb_safestring(){
    echo "$1" | sed 's/ /_/g;s/[?:\/\\]//g;'
}

pb_show_config()
{
    echo "Blog: $pb_title"
    echo "Author: $pb_author"
}

pb_check_state()
{
    errcode=0
    if  [ `ls -1 $pb_srcdir*md 2>/dev/null | wc -l` -eq 0 ]; then
        echo "No markdown files. use 'pb write' to create something"
        errcode=1
    else
        pb_mdfiles=("$(ls -r $pb_srcdir*.md)")
    fi

    if [ $errcode -ne 0 ]; then
        echo "Exiting..."
        exit 0
    fi
}

# Check if the given file is a draft
pb_entry_type()
{
    if $(head -7 "$1" | grep --quiet DRAFT); then
        echo "draft"
    else
        echo "published"
    fi
}

pb_makeindex()
{
  echo "not implemented"
}

pb_pub()
{
    pb_check_state

    case $1 in
        "prev") target_dir=$pb_prev_pubroot;;
        "prod") target_dir=$pb_prod_pubroot;;
        *) echo "unknown publication target"
           exit 0 ;;
    esac

    indexables=()
    existables=()
    for mdf in ${pb_mdfiles[@]}; do
        htf=$target_dir${mdf%.md}.html
        if [ $(pb_entry_type $mdf) == "draft" ]; then
            echo "DRAFT: $mdf -> $htf"
        else
            echo "CURR:  $mdf -> $htf"
            mdf_date=$(head -5 "$mdf" | grep -i 'date:')
            mdf_date=${mdf_date#"date:"}
            existables[${#existables[@]}]=$htf
            indexables[${#indexables[@]}]="$mdf_date,$mdf,${htf##*/}"
            pandoc -o "$htf" "$mdf" $pandoc_args --template "$pb_tmpl_entry_html"
     
        fi
    done

    # Sort entries so they go in reverse-date order on the index page
    IFS=$'\n' idxabl_sorted=($(sort -r <<<"${indexables[*]}")); unset IFS

    ## Make Index Page
    cat $pb_tmpl_index |\
        sed "s/__TITLE__/$pb_title/;" |\
        sed "s/__AUTHOR__/$pb_author/;" > "$pb_temp_index"
    for idxabl in ${idxabl_sorted[@]}; do
        IFS="," read -r -a idxar <<< "$idxabl"; unset IFS
        mdf_title=$(head -5 "${idxar[1]}" | grep -i 'title:')
        mdf_title=${mdf_title#"title:"}
        echo "[${idxar[0]} -$mdf_title](./${idxar[2]})" >> "$pb_temp_index"
        echo >> "$pb_temp_index"
    done
    pandoc -o "$target_dir/index.html" "$pb_temp_index" $pandoc_args --template "$pb_tmpl_index_html"
    existables[${#existables[@]}]="$target_dir/index.html"

    cp "style/style.css" "$target_dir/"
    existables[${#existables[@]}]="$target_dir/style.css"
    
    ## Copy Media
                   
}

pb_push()
{
    echo "push not implemented"
}

# Creat a new timestamped article named for the article title
pb_write()
{
  entry_date="$(date +'%Y-%m-%d-%H-%M')"
  echo "Enter article title:"
  read entry_title
  safe_title=$(pb_safestring "$entry_title")
  filename="$entry_date-$safe_title"
  cat "$pb_tmpl_entry" |\
      sed "s/__TITLE__/$entry_title/;" |\
      sed "s/__AUTHOR__/$pb_author/;" |\
      sed "s/__DATE__/$entry_date/;" > "$filename.md"
  $EDITOR "$filename.md"
}

# Print a list of 'editables', user selects which one by index
# $1 = type of editable (draft, published)
pb_edit()
{
    pb_check_state
    editables=()
    for mdf in ${pb_mdfiles[@]}; do
        if [ $(pb_entry_type $mdf) == $1 ]; then
            echo "${#editables[@]}: $mdf" # TODO get article  titles
            editables[${#editables[@]}]=$mdf
        fi
    done
    read etbl_idx
    if ! [[ "$etbl_idx" =~ ^[0-9]+$ ]]; then
        echo "Positive integer input only"
    elif [ "$etbl_idx" -lt 0 ]; then
        echo "Positive integer input only"
    elif [ "$etbl_idx" -le ${#editables[@]} ]; then
        $EDITOR "${editables[$etbl_idx]}"
    else
        echo "Selected index does not exist"
    fi
}

pb_help()
{
    echo "panblog version $pb_ver"
    echo
    echo "valid commands:"
    echo "   write   - create a new blog entry"
    echo "   edit    - edit a draft entry"
    echo "   rewrite - edit a published (non-draft) entry"
    echo "   preview - create local preview of whole blog"
    echo "   pub     - publish all articles to preview dir"
    echo "   push    - publish stuff to production server via git push"
    echo "   help    - show this message"
    echo
}

pb_show_config

if [ $# -ne 1 ]; then
    pb_help
    exit 0
fi

case $1 in
    "write") pb_write;;
    "edit") pb_edit draft;;
    "rewrite") pb_edit published;;
    "pub") pb_pub prev;;
    "push") pb_push;;
    "help") pb_help;;
    "-h") pb_help;;
    *) pb_help;;
esac
